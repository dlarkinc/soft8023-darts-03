# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import darts_match_pb2 as darts__match__pb2


class DartsMatchStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMatch = channel.unary_unary(
                '/app.DartsMatch/CreateMatch',
                request_serializer=darts__match__pb2.MatchRequest.SerializeToString,
                response_deserializer=darts__match__pb2.MatchResponse.FromString,
                )
        self.RegisterPlayer = channel.unary_unary(
                '/app.DartsMatch/RegisterPlayer',
                request_serializer=darts__match__pb2.RegisterRequest.SerializeToString,
                response_deserializer=darts__match__pb2.RegisterResponse.FromString,
                )
        self.FinalizeMatch = channel.unary_unary(
                '/app.DartsMatch/FinalizeMatch',
                request_serializer=darts__match__pb2.FinalizeRequest.SerializeToString,
                response_deserializer=darts__match__pb2.FinalizeResponse.FromString,
                )
        self.ProcessVisit = channel.unary_unary(
                '/app.DartsMatch/ProcessVisit',
                request_serializer=darts__match__pb2.VisitRequest.SerializeToString,
                response_deserializer=darts__match__pb2.VisitResponse.FromString,
                )
        self.ListMatches = channel.unary_unary(
                '/app.DartsMatch/ListMatches',
                request_serializer=darts__match__pb2.ListRequest.SerializeToString,
                response_deserializer=darts__match__pb2.ListResponse.FromString,
                )
        self.WatchMatch = channel.unary_stream(
                '/app.DartsMatch/WatchMatch',
                request_serializer=darts__match__pb2.WatchRequest.SerializeToString,
                response_deserializer=darts__match__pb2.WatchResponse.FromString,
                )


class DartsMatchServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinalizeMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessVisit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMatches(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DartsMatchServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMatch,
                    request_deserializer=darts__match__pb2.MatchRequest.FromString,
                    response_serializer=darts__match__pb2.MatchResponse.SerializeToString,
            ),
            'RegisterPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterPlayer,
                    request_deserializer=darts__match__pb2.RegisterRequest.FromString,
                    response_serializer=darts__match__pb2.RegisterResponse.SerializeToString,
            ),
            'FinalizeMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.FinalizeMatch,
                    request_deserializer=darts__match__pb2.FinalizeRequest.FromString,
                    response_serializer=darts__match__pb2.FinalizeResponse.SerializeToString,
            ),
            'ProcessVisit': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessVisit,
                    request_deserializer=darts__match__pb2.VisitRequest.FromString,
                    response_serializer=darts__match__pb2.VisitResponse.SerializeToString,
            ),
            'ListMatches': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMatches,
                    request_deserializer=darts__match__pb2.ListRequest.FromString,
                    response_serializer=darts__match__pb2.ListResponse.SerializeToString,
            ),
            'WatchMatch': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchMatch,
                    request_deserializer=darts__match__pb2.WatchRequest.FromString,
                    response_serializer=darts__match__pb2.WatchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'app.DartsMatch', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DartsMatch(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.DartsMatch/CreateMatch',
            darts__match__pb2.MatchRequest.SerializeToString,
            darts__match__pb2.MatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.DartsMatch/RegisterPlayer',
            darts__match__pb2.RegisterRequest.SerializeToString,
            darts__match__pb2.RegisterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinalizeMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.DartsMatch/FinalizeMatch',
            darts__match__pb2.FinalizeRequest.SerializeToString,
            darts__match__pb2.FinalizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessVisit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.DartsMatch/ProcessVisit',
            darts__match__pb2.VisitRequest.SerializeToString,
            darts__match__pb2.VisitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMatches(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/app.DartsMatch/ListMatches',
            darts__match__pb2.ListRequest.SerializeToString,
            darts__match__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/app.DartsMatch/WatchMatch',
            darts__match__pb2.WatchRequest.SerializeToString,
            darts__match__pb2.WatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
